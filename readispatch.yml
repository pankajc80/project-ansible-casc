---
- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    controller_configuration_projects_async_retries: 60
    controller_configuration_projects_async_delay: 2
    controller_username: admin # "{{ vault_controller_username | default(lookup('env', 'CONTROLLER_USERNAME')) }}"
    controller_password: admin # "{{ vault_controller_password | default(lookup('env', 'CONTROLLER_PASSWORD')) }}"
    controller_hostname: 10.100.152.85 # "{{ vault_controller_hostname | default(lookup('env', 'CONTROLLER_HOST')) }}"
    controller_validate_certs: false # "{{ vault_controller_validate_certs | default(lookup('env', 'CONTROLLER_VERIFY_SSL')) }}"
  vars_files:
    - vars/vars.yml

  pre_tasks:
    - name: "Setup authentication (block)"
      block:
        - name: "Get the Authentication Token for the future requests"
          ansible.builtin.uri:
            url: "https://{{ controller_hostname }}/api/v2/tokens/"
            user: "{{ controller_username }}"
            password: "{{ controller_password }}"
            method: POST
            force_basic_auth: true
            validate_certs: "{{ controller_validate_certs }}"
            status_code: 201
          register: authtoken_res

        - name: "Set the oauth token to be used since now"
          ansible.builtin.set_fact:
            controller_oauthtoken: "{{ authtoken_res.json.token }}"
            controller_oauthtoken_url: "{{ authtoken_res.json.url }}"
          no_log: true
      when: controller_oauthtoken is not defined
      tags:
        - always

    - name: Add authentication in repo url
      ansible.builtin.set_fact:
        url: "https://{{ gituser | urlencode }}:{{ githubtoken | urlencode }}@{{ repo_url }}"

    - name: Clone the repo
      ansible.builtin.git:
        repo: "{{ url }}"
        dest: "{{ repo_path }}/{{ repo_name }}"
        version: "{{ branch }}"

    # Include this task and disable filetree_read role so as to only execute Dispatch role
    - name: Include vars from control_vars directory
      ansible.builtin.include_vars:
        dir: "{{ repo_path }}/{{ repo_name }}/control_vars"
        extensions:
          - "yml"
          - "yaml"

  roles:
    #- role: infra.controller_configuration.filetree_read 
    - role: infra.controller_configuration.dispatch 
      vars:
        controller_configuration_dispatcher_roles:
          - {role: settings, var: controller_settings, tags: settings}
      when: "'settings' in input_tag"

    - role: infra.controller_configuration.dispatch 
      vars:
        controller_configuration_dispatcher_roles:
           - {role: organizations, var: controller_organizations, tags: organizations}
      when: "'organizations' in input_tag"

    - role: infra.controller_configuration.dispatch 
      vars:
        controller_configuration_dispatcher_roles:
          - {role: execution_environments, var: controller_execution_environments, tags: execution_environments}
      when: "'execution_environments' in input_tag"

    - role: infra.controller_configuration.dispatch 
      vars:
        controller_configuration_dispatcher_roles:
          - {role: projects, var: controller_projects, tags: projects}
      when: "'projects' in input_tag"

    - role: infra.controller_configuration.dispatch 
      vars:
        controller_configuration_dispatcher_roles:
           - {role: job_templates, var: controller_templates, tags: job_templates}
      when: "'job_templates' in input_tag"

    - role: infra.controller_configuration.dispatch 
      vars:
        controller_configuration_dispatcher_roles:
           - {role: workflow_job_templates, var: controller_workflows, tags: workflow_job_templates}
      when: "'workflow_job_templates' in input_tag"

  post_tasks:
    - name: "Delete the Authentication Token used"
      ansible.builtin.uri:
        url: "https://{{ controller_hostname }}{{ controller_oauthtoken_url }}"
        user: "{{ controller_username }}"
        password: "{{ controller_password }}"
        method: DELETE
        force_basic_auth: true
        validate_certs: "{{ controller_validate_certs }}"
        status_code: 204
      when: controller_oauthtoken_url is defined
...
